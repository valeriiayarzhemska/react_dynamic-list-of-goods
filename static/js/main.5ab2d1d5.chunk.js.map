{"version":3,"sources":["components/GoodList/GoodsList.tsx","components/Button/Button.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","id","color","name","style","Button","dataCy","onClick","clickedButton","children","isButtonActive","type","className","classNames","getAll","fetch","then","response","ok","status","statusText","Error","json","get5First","sort","curGood","nextGood","localeCompare","slice","getRedGoods","filter","App","useState","setGoods","setClickedButton","isLoading","setIsLoading","hasError","setHasError","handleClick","useCallback","loadGoods","buttonName","a","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","ReactDOM","render","document","getElementById"],"mappings":"sQAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACT,oBAEE,UAAQ,OACRC,MAAO,CAAEF,SAHX,SAKGC,GAJIF,S,iBCDAI,EAA0B,SAAC,GAKjC,IAJLC,EAII,EAJJA,OACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,cACAC,EACI,EADJA,SAEMC,EAAiBF,IAAkBF,EAEzC,OACE,wBACEK,KAAK,SACL,UAASL,EACTC,QAASA,EACTK,UAAWC,IACT,kBACA,CACE,aAAcH,IAPpB,SAWGD,KCzBA,SAASK,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,IACEC,EAGED,EAHFC,GACAC,EAEEF,EAFFE,OACAC,EACEH,EADFG,WAGF,IAAKF,EACH,MAAM,IAAIG,MAAJ,UAAaF,EAAb,cAAyBC,IAGjC,OAAOH,EAASK,UAIf,IAAMC,EAAY,WACvB,OAAOT,IACJE,MAAK,SAAAjB,GAAK,OAAIA,EACZyB,MAAK,SAACC,EAASC,GAAV,OAAuBD,EAAQtB,KAAKwB,cAAcD,EAASvB,SAChEyB,MAAM,EAAG,OAGHC,EAAc,WACzB,OAAOf,IACJE,MAAK,SAAAjB,GAAK,OAAIA,EACZ+B,QAAO,kBAAyB,QAAzB,EAAG5B,aCtBJ6B,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOjC,EAAP,KAAckC,EAAd,KACA,EAA0CD,mBAAS,IAAnD,mBAAOxB,EAAP,KAAsB0B,EAAtB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAcC,sBAAW,uCAC7B,WAAOC,EAAkCC,GAAzC,SAAAC,EAAA,yDACMnC,IAAkBkC,EADxB,wDAKEN,GAAa,GALf,cAQIH,EARJ,SAQmBQ,IARnB,kCASIP,EAAiBQ,GATrB,kDAWIJ,GAAY,GAXhB,QAcEF,GAAa,GAdf,0DAD6B,wDAgB1B,CAAC5B,IAGN,OACE,sBAAKI,UAAU,2BAAf,UACE,oBAAIA,UAAU,mBAAd,mCAIA,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CACEN,OAAO,aACPC,QAAS,kBAAMgC,EAAYzB,EAAQ,eACnCN,cAAeA,EAHjB,4BAQA,cAAC,EAAD,CACEF,OAAO,oBACPC,QAAS,kBAAMgC,EAAYhB,EAAW,sBACtCf,cAAeA,EAHjB,gCAQA,cAAC,EAAD,CACEF,OAAO,aACPC,QAAS,kBAAMgC,EAAYV,EAAa,eACxCrB,cAAeA,EAHjB,+BASD2B,EAEG,8BACE,cAAC,IAAD,CACES,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,GACdC,aAAa,iBACbC,OAAQ,CAAC,MAAO,QAAS,OAAQ,SAAU,SAAU,cAKzD,mCACGZ,EACC,mBAAGzB,UAAU,mBAAb,yCAIA,cAAC,EAAD,CAAWb,MAAOA,UCpFhCmD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5ab2d1d5.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from '../../types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(({ id, color, name }) => (\n      <li\n        key={id}\n        data-cy=\"good\"\n        style={{ color }}\n      >\n        {name}\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  dataCy: string,\n  onClick: () => Promise<void>,\n  clickedButton: string,\n  children: React.ReactNode,\n};\n\nexport const Button: React.FC<Props> = ({\n  dataCy,\n  onClick,\n  clickedButton,\n  children,\n}) => {\n  const isButtonActive = clickedButton === dataCy;\n\n  return (\n    <button\n      type=\"button\"\n      data-cy={dataCy}\n      onClick={onClick}\n      className={classNames(\n        'button is-light',\n        {\n          'is-warning': isButtonActive,\n        },\n      )}\n    >\n      {children}\n    </button>\n  );\n};\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      const {\n        ok,\n        status,\n        statusText,\n      } = response;\n\n      if (!ok) {\n        throw new Error(`${status} - ${statusText}`);\n      }\n\n      return response.json();\n    });\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((curGood, nextGood) => curGood.name.localeCompare(nextGood.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods\n      .filter(({ color }) => color === 'red'));\n};\n","import React, { useCallback, useState } from 'react';\nimport 'bulma/css/bulma.min.css';\nimport { Vortex } from 'react-loader-spinner';\nimport './App.scss';\nimport { GoodsList } from './components/GoodList';\nimport { Button } from './components/Button';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [clickedButton, setClickedButton] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleClick = useCallback(\n    async (loadGoods: () => Promise<Good[]>, buttonName: string) => {\n      if (clickedButton === buttonName) {\n        return;\n      }\n\n      setIsLoading(true);\n\n      try {\n        setGoods(await loadGoods());\n        setClickedButton(buttonName);\n      } catch {\n        setHasError(true);\n      }\n\n      setIsLoading(false);\n    }, [clickedButton],\n  );\n\n  return (\n    <div className=\"App page page__container\">\n      <h1 className=\"page page__title\">\n        Dynamic list of Goods\n      </h1>\n\n      <div className=\"buttons\">\n        <Button\n          dataCy=\"all-button\"\n          onClick={() => handleClick(getAll, 'all-button')}\n          clickedButton={clickedButton}\n        >\n          Load all goods\n        </Button>\n\n        <Button\n          dataCy=\"first-five-button\"\n          onClick={() => handleClick(get5First, 'first-five-button')}\n          clickedButton={clickedButton}\n        >\n          Load 5 first goods\n        </Button>\n\n        <Button\n          dataCy=\"red-button\"\n          onClick={() => handleClick(getRedGoods, 'red-button')}\n          clickedButton={clickedButton}\n        >\n          Load red goods\n        </Button>\n      </div>\n\n      {isLoading\n        ? (\n          <div>\n            <Vortex\n              height=\"80\"\n              width=\"80\"\n              ariaLabel=\"vortex-loading\"\n              wrapperStyle={{}}\n              wrapperClass=\"vortex-wrapper\"\n              colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n            />\n          </div>\n        )\n        : (\n          <>\n            {hasError ? (\n              <p className=\"page page__error\">\n                Sorry, something went wrong\n              </p>\n            ) : (\n              <GoodsList goods={goods} />\n            )}\n          </>\n        )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}